{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "CourseHasOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CourseIsNotCreated",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidState",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlyOwner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SenderIsNotCourseOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "courseHash",
						"type": "bytes32"
					}
				],
				"name": "activateCourse",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "courseHash",
						"type": "bytes32"
					}
				],
				"name": "deactivateCourse",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "emergencyWithdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getContractOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "courseHash",
						"type": "bytes32"
					}
				],
				"name": "getCourseByHash",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "proof",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "enum CourseMarketplace.State",
								"name": "state",
								"type": "uint8"
							}
						],
						"internalType": "struct CourseMarketplace.Course",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCourseCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getCourseHashAtIndex",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isStopped",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes16",
						"name": "courseId",
						"type": "bytes16"
					},
					{
						"internalType": "bytes32",
						"name": "proof",
						"type": "bytes32"
					}
				],
				"name": "purchaseCourse",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "courseHash",
						"type": "bytes32"
					}
				],
				"name": "repurchaseCourse",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "resumeContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "selfDestruct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "stopContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"CourseHasOwner()": [
					{
						"notice": "Course has already a Owner!"
					}
				],
				"CourseIsNotCreated()": [
					{
						"notice": "Course is not created!"
					}
				],
				"InvalidState()": [
					{
						"notice": "Course has invalid state!"
					}
				],
				"OnlyOwner()": [
					{
						"notice": "Only owner has an access!"
					}
				],
				"SenderIsNotCourseOwner()": [
					{
						"notice": "Sender is not course owner!"
					}
				]
			},
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CourseMarketplace.sol": "CourseMarketplace"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CourseMarketplace.sol": {
			"keccak256": "0x47d84e8600ab40a7fa539b1218a800cdb5bccd787d0981d2ae9c4f55f453847a",
			"license": "MIT",
			"urls": [
				"bzz-raw://29f9c243eb9727aa810b295b021d8541042304d221f1bfa9a6e448d8c5846114",
				"dweb:/ipfs/QmPUpXZQVBcK2adHkbGNCQe4bPJcinu58hCdXq7LqD2CE7"
			]
		}
	},
	"version": 1
}